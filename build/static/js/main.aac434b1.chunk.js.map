{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useSpeechRecognition","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","React","createElement","onClick","SpeechRecognition","startListening","stopListening","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iLA2BeA,EAvBH,WAAM,IAAAC,EAOZC,iCAJFC,EAAUF,EAAVE,WACAC,EAASH,EAATG,UACAC,EAAeJ,EAAfI,gBAIJ,OAHoCJ,EAAhCK,iCAOAC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,cAAYJ,EAAU,KAAK,OAC9BG,IAAAC,cAAA,UAAQC,QAASC,IAAkBC,gBAAgB,SACnDJ,IAAAC,cAAA,UAAQC,QAASC,IAAkBE,eAAe,QAClDL,IAAAC,cAAA,UAAQC,QAASJ,GAAiB,SAClCE,IAAAC,cAAA,SAAIL,IARDI,IAAAC,cAAA,YAAM,+CCFAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvB,IAAAC,cAACD,IAAMwB,WAAU,KACfxB,IAAAC,cAACR,EAAG,QAORa","file":"static/js/main.aac434b1.chunk.js","sourcesContent":["import React from \"react\";\n\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\n\nconst App = () => {\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition()\n\nif(!browserSupportsSpeechRecognition){\n  return <span>Your Browser dosent support speech to text</span>\n}\n  return (\n    <div>\n      <p>Microphone:{listening?'on':'off'}</p>\n      <button onClick={SpeechRecognition.startListening}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}